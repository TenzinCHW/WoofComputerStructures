module controller (
    input clk,  // clock
    input rst,  // reset
    input buttons[4],
    input winButton[1],
    output out[8]
  ) {
  
  sig moveHold[4];
  sig temp[25];
  move move;
  map mapMod;
  convertToDisplay convert;
  checkWin win;
  
  .clk(clk) {
    .rst(rst) {
      dff start[1];
      dff level[2];  // the level that you are currently on
      dff difficulty[1];  // 1 for hard, 0 for easy
      dff position[20][20];
      dff currentMap[20][20];
      dff winPos[20][20];
      dff timer[25];
      fsm state(.clk(clk), #INIT(STATIONARY)) = {STATIONARY,UP,DOWN,LEFT,RIGHT};
      toDisplay display;
      collision collide;
      }
    }
  
  always {
    
    if (state.q == state.STATIONARY){
      case (buttons) {  // add if block so that buttons only change the state if it is currently stationary
      1: state.d = state.UP;
      2: state.d = state.DOWN;
      4: state.d = state.LEFT;
      8: state.d = state.RIGHT;
      }
    }
    
    // check for collisions now, if there is collision then
    // change state to STATIONARY
    if (collide.out) {
      state.d = state.STATIONARY;
    }
    
    case (state.q) {
      state.UP: moveHold = h1;
      state.DOWN: moveHold = h2;
      state.LEFT: moveHold = h4;
      state.RIGHT: moveHold = h8;
      default: moveHold = h0;
    }
    
    timer.d = timer.q + 1;
    temp = timer.q - 1;
    if (timer.q[24] ^ temp[24]){
      move.movement = moveHold;
    }
    else {
      move.movement = h0;
    }
    
    move.position = position.q;
    position.d = move.out;
    
    collide.position = position.q; // Assign collision input
    collide.movement = moveHold;   // after moveHold is assigned
    collide.map = currentMap.q;
    
    if (state.q == state.STATIONARY) {
      if (timer.q[24]) {  // blink if stationary
        convert.position = move.out;
      }
      else {
        convert.position = 20x{{h00000}};
      }
    }
    else {
      convert.position = move.out;  // else just move
    }
    convert.map = currentMap.q;
    
    // insert the displaying of win state here
    if (winButton) {
      convert.map = 20x{{h00000}};
      convert.position = winPos.q;
    }
    
    display.pattern = convert.out;
    out = display.inputsToCircuit;
    
    // check if current pos is win position - change level, set state to STATIONARY then set start.d to 1
    win.position = position.q;
    win.winPos = winPos.q;
    if (win.out) {
      level.d = level.q + 1;
      state.d = state.STATIONARY;
      start.d = 0;
    }
    
    mapMod.level = level.q;
    if (~start.q) {
      currentMap.d = mapMod.map;
      position.d = mapMod.start;
      winPos.d = mapMod.winPos;
      start.d = 1;
    }
  }
}
